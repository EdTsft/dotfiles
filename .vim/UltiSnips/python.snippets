snippet newscript "New python script template." b
#!/usr/bin/env python
"""${1:TODO: Program description.}"""

import argparse


def parse_args(args=None):
    """Parse command-line arguments.

    Args:
        args: A list of argument strings to use instead of sys.argv.

    Returns:
        An \`argparse.Namespace\` object containing the parsed arguments.
    """
    parser = argparse.ArgumentParser(
        description=__doc__.splitlines()[0] if __doc__ else None,
        formatter_class=argparse.ArgumentDefaultsHelpFormatter,
    )
    return parser.parse_args(args)


def main(args=None):
    """Run script.

    Args:
        args: A list of argument strings to use instead of sys.argv.
    """
    args = parse_args(args)
    ${2}


if __name__ == '__main__':
    main()
endsnippet

snippet timefile "Timestamp string useable as a file name."
time.strftime('%Y.%m.%d-%H.%M.%S')
endsnippet

snippet tfprint "Tensorflow print op."
${5:$1} = tf.Print(${1}, [${2:$1}], '${3:$2}', summarize=${4:100})
endsnippet

# Arguments

snippet iarg "Add integer argument." w
add_argument('--${1:name}', default=${2:0}, type=int,
             help='${3}')
endsnippet

snippet farg "Add float argument." w
add_argument('--${1:name}', default=${2:0}, type=float,
             help='${3}')
endsnippet

snippet sarg "Add string argument." w
add_argument('--${1:name}', default=${2:0}, type=str,
             help='${3}')
endsnippet

# Imports
snippet iplt "Import matplotlib.pyplot." b
import matplotlib.pyplot as plt
endsnippet

snippet inp "Import numpy." b
import numpy as np
endsnippet

snippet isns "Import seaborn." b
import seaborn as sns
endsnippet
